
#include <iostream>
#define MAXN 1000
using namespace std;
int temp[MAXN+2];
void merge(int arr[], int si, int mid, int ei)
{

	int i = si;
	int j = mid + 1;
	int k = 0;
	while (i <= mid && j <= ei)
	{
		if (arr[i] < arr[j])
			temp[k++] = arr[i++];
		else
			temp[k++] = arr[j++];
	}

	while (i <= mid)
		temp[k++] = arr[i++];

	while (j <= ei)
		temp[k++] = arr[j++];

	k = 0; i = si;
	while (i <= ei)
		arr[i++] = temp[k++];

}

void mergesort(int arr[], int si, int ei)
{
	if (si == ei)
		return;

	int mid = (si + ei) / 2;
	mergesort(arr, si, mid);
	mergesort(arr, mid+1, ei);
	merge(arr, si, mid, ei);
}

int main()
{
	int arr[MAXN+2];

	for (int i=MAXN;i>=0;i--)
		arr[MAXN - i] = i;

	mergesort(arr, 0, MAXN);
	for (int i = 0; i <=MAXN; i++)
		cout<<arr[i]<<" ";

return 0;
}
