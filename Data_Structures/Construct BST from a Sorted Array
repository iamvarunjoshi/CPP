Construct BST from a Sorted Array
Send Feedback
Given a sorted integer array A of size n which contains all unique elements. You need to construct a balanced BST from this input array. Return the root of constructed BST.
Note : If array size is even, take first mid as root.
Input format :
Line 1 : Integer n (Size of array)
Line 2 : Array elements (separated by space)
Output Format :
BST elements (in pre order traversal, separated by space)
Sample Input :
7
1 2 3 4 5 6 7
Sample Output :
4 2 1 3 6 5 7 


// Following is the Binary Tree node structure
/**************
class BinaryTreeNode {
    public : 
    T data;
    BinaryTreeNode<T> *left;
    BinaryTreeNode<T> *right;

    BinaryTreeNode(T data) {
        this -> data = data;
        left = NULL;
        right = NULL;
    }
};
***************/

BinaryTreeNode<int>* BST(int *input, int s,int e) {

	if(s>e)
    return NULL;
    

    int mid=(e+s)/2;
    
    BinaryTreeNode<int>* root= new BinaryTreeNode<int>(input[mid]);
	root->left=BST(input,s,mid-1);
	root->right=BST(input,mid+1,e);
    
    return root;
    
}



BinaryTreeNode<int>* constructTree(int *input, int n) {

return BST(input,0,n-1);
}
