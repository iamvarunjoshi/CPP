Code: Reverse LL (Iterative)
Send Feedback
Given a linked list, reverse it iteratively.
You don't need to print the elements, just reverse the LL duplicates and return the head of updated LL.
Input format : Linked list elements (separated by space and terminated by -1)`

Sample Input 1 :
1 2 3 4 5 -1
Sample Output 1 :
5 4 3 2 1

// Following is the node structure
/**************
class node{
public:
    int data;
    node * next;
    node(int data){
        this->data=data;
        this->next=NULL;
    }
};
***************/
node* rev_linkedlist_itr(node* head)
{
if(head==NULL||head->next==NULL)
    return head;
    
node *current=head;
node *prev=NULL;
node* nextnode=head->next; 
node *h;    
    while(nextnode->next!=NULL)
    {
        current->next=prev;       
        prev=current;
        current=nextnode;
        nextnode=nextnode->next;
    }
    
nextnode->next=current;
current->next=prev;
    return nextnode;

}

