Code: Midpoint of LL
Send Feedback
Given a linked list, find and return the midpoint.
If the length of linked list is even, return the first mid point.
Input format : Linked list elements (separated by space and terminated by -1)`

Sample Input 1 :
1 2 3 4 5 -1
Sample Output 1 :
3
Sample Input 2 :
1 2 3 4 -1
Sample Output 2 :
2



// Following is the node structure
/**************
class node{
public:
    int data;
    node * next;
    node(int data){
        this->data=data;
        this->next=NULL;
    }
};
***************/



//approach-1
node* midpoint_linkedlist(node *head)
{
    node *slow=head;
    node*fast=head;
    
    while(fast!=NULL)
    {
        
        if(fast->next!=NULL)
        {
            fast=fast->next;
            if(fast->next!=NULL)
            {
                fast=fast->next;
            }
            else
            {
                return slow;
            }
        }
        else{
            return slow;
            break;
        }
        
        slow=slow->next;
    }
}

// approach 2
node* midpoint_linkedlist(node *head)
	{	node *slow=head;
    node *fast=head->next;
    
    while(fast!=NULL)
    {
        if(fast->next==NULL)
        {return slow;}//when my fast->next==NULL i.e. even linked list
        fast=fast->next->next;
        slow=slow->next;
    }
    return slow;//this is when fast==NULL i.e. odd list

}