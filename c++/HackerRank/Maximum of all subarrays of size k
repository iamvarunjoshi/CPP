Maximum of all subarrays of size k

Given an array A and an integer K. Find the maximum for each and every contiguous subarray of size K.

Input:
The first line of input contains an integer T denoting the number of test cases. The first line of each test case contains a single integer N denoting the size of array and the size of subarray K. The second line contains N space-separated integers A1, A2, ..., AN denoting the elements of the array.

Output:
For each testcase, in a new line, print the maximum for every subarray of size k.

Your Task:
This is a function problem. You only need to complete the function max_of_subarrays that prints the answer. The newline is automatically appended by the driver code.

Constraints:
1 ≤ T ≤ 200
1 ≤ N ≤ 107
1 ≤ K ≤ N
0 ≤ A[i] <= 107

Example:
Input:
2
9 3
1 2 3 1 4 5 2 3 6
10 4
8 5 10 7 9 4 15 12 90 13
Output:
3 3 4 5 5 5 6
10 10 10 15 15 90 90

Explanation:
Testcase 1: Starting from first subarray of size k = 3, we have 3 as maximum. Moving the window forward, maximum element are as 3, 4, 5, 5, 5 and 6.
Testcase 2: Starting from first subarray of size k =, we have 10 as maximum. Moving the window forward maximum elements are as follows 10 10 10 15 15 90 90.



void max_of_subarrays(int *arr, int n, int k){
int maximumindex=0;
int maximum=arr[0];
if(k>n)
    return;

if(n==1)
{
    cout<<arr[0];
    return;
}

int maxindex=0;
int maxelement=arr[0];

for(int i=1;i<k;i++)
{
    if(maxelement<arr[i])
    {
        maxelement=arr[i];maxindex=i;
    }
}
cout<<maxelement<<" ";

for(int i=k;i<n;i++)
{
    if(arr[i]<maxelement&&(i-maxindex+1)<=k)
    {
        cout<<maxelement<<" ";
        continue;    
    }
    else if(arr[i]>maxelement)
    {
        maxelement=arr[i];
        maxindex=i;
    }
    else{
        // the only cond left is that my max element is out of window
        int j=0;
        maxelement=INT_MIN;
        for(int I=i;I>=(i-k+1);I--)
        {
            if(arr[I]>maxelement)
            {
                maxelement=arr[I];
                maxindex=I;
            }
        }
    }
             cout<<maxelement<<" ";
    }
}