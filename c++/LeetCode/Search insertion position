Using else if 
	slows down a code  its better if you use several if statement
Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

You may assume no duplicates in the array.

Example 1:

Input: [1,3,5,6], 5
Output: 2
Example 2:

Input: [1,3,5,6], 2
Output: 1
Example 3:

Input: [1,3,5,6], 7
Output: 4
Example 4:

Input: [1,3,5,6], 0
Output: 0


        
int searchInsert(vector<int>& nums, int target) 
{
		int ans=-1;
        int n=nums.size();
        
        for(int i=0;i<n;i++)
        {
            if(nums[i]==target)
            {
              ans=i;  
              break;
            } 
            if(ans==-1)
            {
                if(nums[i]>target)
                {
                    ans=i;
                    break;
                }
                else if(i==n-1)
                {
                    ans=n;
                    break;
                }
            }
        }
        return ans;
}
        
		
	int searchInsert(vector<int>& nums, int target) {

        int left=0;
        int n=nums.size();
        int right=n-1;
        while(left<=right)
        {
            int mid=(left+right)/2;
            if(nums[mid]==target)
                return mid;
            else if(nums[mid]>target)
                right=mid-1;
            else if(nums[mid]<target)
                left=mid+1;
        }
        return left;
    }