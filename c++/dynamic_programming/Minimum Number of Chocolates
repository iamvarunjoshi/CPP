Minimum Number of Chocolates
Send Feedback
Noor is a teacher. She wants to give some chocolates to the students in her class. All the students sit in a line and each of them has a score according to performance. Noor wants to give at least 1 chocolate to each student. She distributes chocolates to them such that If two students sit next to each other then the one with the higher score must get more chocolates. Noor wants to save money, so she wants to minimise the total number of chocolates.
Note that when two students have equal score they are allowed to have different number of chocolates.
Input Format:
First Line: Integer N, the number of students in Noorâ€™s class. 
Second Line: Each of the student's score separated by spaces.
Output Format:
Output a single line containing the minimum number of chocolates Noor must give.
Input Constraints
 1 <= N <= 100000
 1 <= score <= 100000
Sample Input:
4
1 4 4 6
sample Output:
6
Sample Input:
3
8 7 5
sample Output:
6

using namespace std;
int getMin(int *arr, int n){
int * dp=new int[n];
    //1 child will get one choclate olny
    dp[0]=1;
    for(int i=1;i<n;i++)
    {
        if(arr[i]>arr[i-1])
            dp[i]=dp[i-1]+1;
        else
        {
            //just in case botha are having same no or less tha that of previous
            dp[i]=1;
        }
    }
    
    //arr shows the marks of students and dp showcases the choclates a student has,
    for(int i=n-2;i>=0;i--)
    {
        if(arr[i]>arr[i+1]&&dp[i]<=dp[i+1])
            dp[i]=dp[i+1]+1;        
        //if element prior to it is having more marks then he should have more choclate
    	//just in case we're having same same marks or less marks there's no need to increase no of candies. 
    }
    int soln=0;
    for(int i=0;i<n;i++)
        soln+=dp[i];
    
    return soln;
    
    /*
    /*
int *ans=new int[n];
    ans[0]=1;
    //as the elements depend on the no of elements on the left we will consider that in this case
    for(int i=1;i<n;i++)
    {
        if(arr[i-1]<arr[i])
            ans[i]=ans[i-1]+1;
     	else
            ans[i]=1;
    }
    //last child will oly depend on the element on its left 
    // and elements before it will also depend on elements to thier left and right as well
    //now we will consider elements on the right.
    for(int i=n-2;i>=0;i--)
    {
        //if no of marks of ith element is greater and this choclates are less or equal to the previous one
        if(arr[i]>arr[i+1]&&ans[i]<=ans[i+1])
            ans[i]=ans[i+1]+1;
    }
    int soln=0;
    for(int i=0;i<n;i++)
        soln+=ans[i];
    
    return soln;
*/
    
    */
}
