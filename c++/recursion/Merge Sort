Merge Sort Code
Send Feedback
Sort an array A using Merge Sort.
Change in the input array itself. So no need to return or print anything.
Input format :
Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)
Output format :
Array elements in increasing order (separated by space)
Constraints :
1 <= n <= 10^3
Sample Input 1 :
6 
2 6 8 5 4 3
Sample Output 1 :
2 3 4 5 6 8
Sample Input 2 :
5
2 1 5 2 3
Sample Output 2 :
1 2 2 3 5 

//Merge Sort
bool flag=false;
	int temp[10000];

void merge(int *input,int si,int mid,int ei)
{
	int i=si,j=mid+1;
	int k=0;
	while(i<=mid&&j<=ei)
	{
		if(input[i]<input[j])
			temp[k++]=input[i++];
		else
			temp[k++]=input[j++];
	}
    
	while(i<=mid)
		temp[k++]=input[i++];
	
	while(j<=ei)
		temp[k++]=input[j++];
    
k=0;
for(int i=si;i<=ei;i++)
{
    input[i]=temp[k++];
}
	
	
}

void mergeSort(int input[], int size,int si=0,int ei=0)
{
if(flag==false)
{
    ei=size-1;
    flag=true;
}
	
if(si>=ei)
	return;

int mid=(si+ei)/2;
mergeSort(input,size,si,mid);
mergeSort(input,size,mid+1,ei);
merge(input,si,mid,ei);

}

//

/*
	Kinda old School approach:
	void Msort(int *input,int si,int ei);
void merge(int *a,int d,int c,int b);

void mergeSort(int input[], int size)
{
	    Msort(input,0,size-1);    
}

void Msort(int *a,int si,int ei)
{    int mid=(si+ei)*0.5;
    if(si>=ei)
    {
        return;
    }
    mid=(si+ei)*0.5;
    Msort(a,si,mid);
    Msort(a,mid+1,ei);
    merge(a,si,mid,ei);
}

void merge(int *input,int low,int mid,int high)
{
    int i=low,j=mid+1,k=0;
    int arr[high-low+1];
    
    while(i<=mid&&j<=high)
    {     if(input[i]<input[j])
         {
            arr[k]=input[i];i++,k++;
         }
        else
        {
            arr[k]=input[j];j++,k++;
        }
    }
    while(i<=mid)
    {
        arr[k]=input[i];i++,k++;
    } 
    while(j<=high)
    {
        arr[k]=input[j];j++,k++;
    }
    k=0;
    for(i=low;i<=high;i++)
    {
        input[i]=arr[k];k++;
    }
}


*/